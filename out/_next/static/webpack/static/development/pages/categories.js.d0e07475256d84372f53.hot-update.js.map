{"version":3,"file":"static/webpack/static\\development\\pages\\categories.js.d0e07475256d84372f53.hot-update.js","sources":["webpack:///./components/Overlay.jsx"],"sourcesContent":["\r\nimport React from 'react';\r\nimport Link from 'next/link';\r\n\r\nimport styles from \"../css/Overlay.module.css\";\r\n\r\nimport { getOverlay } from \"../lib/apiRequester\";\r\n\r\nexport class Overlay extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.mounted = false;\r\n\r\n        this.state = {\r\n\r\n            arivals: [\r\n                {name: \"View All\", link: \"/categories\", filter: \"new\"}\r\n            ],\r\n\r\n            category: [\r\n                {name: \"View All\", link: \"/categories\", filter: \"\"},\r\n                {name: \"Shirts\", link: \"/categories\", filter: \"shirts\"},\r\n                {name: \"T-shirts\", link: \"/categories\", filter: \"t-shirts\"},\r\n                {name: \"Sweaters & Cardigans\", link: \"/categories\", filter: \"sweaters\"},\r\n                {name: \"Pants\", link: \"/categories\", filter: \"pants\"},\r\n                {name: \"Jeans\", link: \"/categories\", filter: \"jeans\"},\r\n                {name: \"Joggers\", link: \"/categories\", filter: \"joggers\"}\r\n            ]\r\n\r\n        }\r\n    }\r\n\r\n    getLink(item) {\r\n\r\n        let link = item.link;\r\n\r\n        console.log(link);\r\n\r\n        if (item.filter !== \"\") {\r\n            // return {pathname: link, query: {mainCategory: this.props.category, subCategory: item.filter}};\r\n            return `/${link}?mainCategory=${this.props.category}&subCategory=${item.filter}`\r\n        }\r\n        return `/${link}?mainCategory=${this.props.category}`\r\n        // return {pathname: link, query: {mainCategory: this.props.category}};\r\n\r\n        \r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        this.mounted = true;\r\n\r\n        \r\n        if (sessionStorage !== undefined) {\r\n\r\n            let data = sessionStorage.getItem(\"overlay\");\r\n\r\n            if (!data) {\r\n                data = await getOverlay();\r\n                sessionStorage.setItem(\"overlay\", JSON.stringify(data));\r\n            } else {\r\n                data = JSON.parse(data);\r\n            }\r\n\r\n            \r\n            if (this.mounted) {\r\n                this.setState({...this.state, category: data});\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render() {\r\n\r\n        // document.documentElement.style.setProperty(\"--overlayOffset\", (112 + this.props.offset) + \"px\");\r\n\r\n        return <div className={styles.overlay}>\r\n\r\n            <div>\r\n                <h4 className={styles.title}>New Arrivals</h4>\r\n                <ul className={styles.list}>\r\n                    {this.state.arivals.map((item, i) => {\r\n                        return <li key={i}><Link as={`${process.env.ASSET_PREFIX}/${this.getLink(item)}`} href={this.getLink(item)} passHref><a>{item.name}</a></Link></li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n\r\n            <div>\r\n                <h4 className={styles.title}>Shop by Category</h4>\r\n                <ul className={styles.list}>\r\n                    {this.state.category.map((item, i) => {\r\n                        return <li key={i}><Link as={`${process.env.ASSET_PREFIX}/${this.getLink(item)}`} href={this.getLink(item)} passHref><a>{item.name}</a></Link></li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n\r\n        </div>;\r\n\r\n    }\r\n\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AADA;AACA;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAbA;AALA;AAsBA;AACA;AAzBA;AAAA;AAAA;AA4BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CA;AACA;AA7CA;AAAA;AAAA;AAAA;AACA;AAgDA;AACA;AAlDA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAoDA;AACA;AArDA;AAAA;AACA;AADA;AAuDA;AACA;AAxDA;AA2DA;AACA;AAAA;AAAA;AACA;AACA;AA9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmEA;AACA;AApEA;AAAA;AAAA;AAshGA;AACA;AADA;AAAA;;;;A","sourceRoot":""}