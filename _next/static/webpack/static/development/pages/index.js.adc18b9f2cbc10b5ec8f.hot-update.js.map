{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.adc18b9f2cbc10b5ec8f.hot-update.js","sources":["webpack:///./lib/userAuth.js"],"sourcesContent":["import { checkToken,addToWishlist,addToShoppingCart,removeFromShoppingCart } from \"./apiRequester\";\r\n\r\nconst setUser = (session, data) => {\r\n\r\n    localStorage.removeItem(\"user\");\r\n    sessionStorage.removeItem(\"user\");\r\n\r\n    if (!session) {\r\n\r\n        // localStorage.setItem(\"token\", data.token);\r\n        localStorage.setItem(\"user\", JSON.stringify(data.userInfo));\r\n\r\n    } else {\r\n\r\n        // sessionStorage.setItem(\"token\", data.token);\r\n        sessionStorage.setItem(\"user\", JSON.stringify(data.userInfo));\r\n\r\n    }\r\n}\r\n\r\nconst isSignedIn = async () => {\r\n\r\n    let res = await checkToken();\r\n\r\n    // console.log(res);\r\n\r\n    if (typeof localStorage !== \"undefined\") {\r\n        return res.loggedIn && res.validToken && getUser() !== undefined;\r\n    } else {\r\n        return res.loggedIn && res.validToken;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst getUserEmail = () => {\r\n\r\n    let user = localStorage.getItem(\"user\");\r\n\r\n    if (!user) {\r\n        user = sessionStorage.getItem(\"user\");\r\n    }\r\n\r\n    if (!user) {\r\n        return undefined;\r\n    }\r\n\r\n    user = JSON.parse(user);\r\n\r\n    return user.email;\r\n\r\n}\r\n\r\nconst getUserEmailName = () => {\r\n\r\n    let user = localStorage.getItem(\"user\");\r\n\r\n    if (!user) {\r\n        user = sessionStorage.getItem(\"user\");\r\n    }\r\n\r\n    if (!user || !user.email) {\r\n        console.log(\"no user\");\r\n        return undefined;\r\n    }\r\n\r\n    user = JSON.parse(user);\r\n\r\n    return user.email.split(\"@\")[0];\r\n\r\n}\r\n\r\nconst updateWishList = (item, remove) => {\r\n\r\n    let user = getUser();\r\n\r\n    if (user) {\r\n        \r\n        if (!user.wishlist.includes(item)) {\r\n\r\n            if (remove) {\r\n                user.wishlist = user.wishlist.filter(val => JSON.stringify(val) !== JSON.stringify(item));\r\n            } else {\r\n                user.wishlist.push(item);\r\n            }\r\n\r\n            isSignedIn().then((signedIn) => {\r\n                if (signedIn) {\r\n                    addToWishlist(user.email, item);\r\n                }\r\n            });\r\n\r\n            if (localStorage.getItem(\"user\")) {\r\n                localStorage.setItem(\"user\", JSON.stringify(user));\r\n            } else {\r\n                sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n            }\r\n\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        // User not logged in.\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify({wishlist: [item]}));\r\n\r\n    }\r\n\r\n}\r\n\r\nconst updateCart = async (item, remove, amount, value) => {\r\n\r\n    let user = getUser();\r\n\r\n    console.log(`item: ${item}, remove: ${remove}, amount: ${amount}, value: ${value}`);\r\n\r\n    if (user) {\r\n        let index = -1; \r\n        index = user.shoppingCart.findIndex((product)=>{\r\n\r\n            return product.productID === item.productID && product.size === item.size && product.colours.hex === item.colours.hex;\r\n        });\r\n\r\n        console.log(\"index: \" + index);\r\n\r\n        if (!user.shoppingCart.includes(item)) {\r\n\r\n            console.log(\"includes item: \" + remove);\r\n\r\n            if (remove) {\r\n                user.shoppingCart = user.shoppingCart.filter(val => JSON.stringify(val) !== JSON.stringify(item));\r\n            } else {\r\n                if (index !== -1 ){\r\n                    user.shoppingCart[index].quantity += value;\r\n                }else {\r\n\r\n                    user.shoppingCart.push(item);\r\n                }\r\n                \r\n            }\r\n\r\n            isSignedIn().then( async (signedIn) => {\r\n\r\n                if (signedIn) {\r\n                    \r\n                    if (remove !== true ){\r\n                        console.log(\"GOING INTO apiREQUESTER\")\r\n                        await addToShoppingCart(user.email, item,value);\r\n                        \r\n                    }else {\r\n                        \r\n                        await removeFromShoppingCart(user.email, item ,amount )\r\n                    }\r\n\r\n\r\n                }\r\n            });\r\n\r\n            \r\n            if (localStorage.getItem(\"user\")) {\r\n                localStorage.setItem(\"user\", JSON.stringify(user));\r\n            } else {\r\n                sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n            }\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        // User not logged in.\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify({shoppingCart: [item]}));\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst getUserWishList = () => {\r\n\r\n    let user = localStorage.getItem(\"user\");\r\n\r\n    if (!user) {\r\n        user = sessionStorage.getItem(\"user\");\r\n    }\r\n\r\n    if (!user) {\r\n        return undefined;\r\n    }\r\n\r\n    user = JSON.parse(user);\r\n\r\n    return user.wishlist;\r\n\r\n}\r\n\r\nconst getUserCart = () => {\r\n\r\n    let user = localStorage.getItem(\"user\");\r\n\r\n    if (!user) {\r\n        user = sessionStorage.getItem(\"user\");\r\n    }\r\n\r\n    if (!user) {\r\n        return undefined;\r\n    }\r\n\r\n    user = JSON.parse(user);\r\n\r\n    return user.shoppingCart;\r\n\r\n}\r\n\r\nconst initUser = () => {\r\n    let user = localStorage.getItem(\"user\");\r\n\r\n    if (!user) {\r\n        user = sessionStorage.getItem(\"user\");\r\n    }\r\n\r\n    if (!user) {\r\n        localStorage.setItem(\"user\", JSON.stringify({wishlist: [], shoppingCart: []}));\r\n    }\r\n}\r\n\r\nconst getNumberOfItemsInCart = () => {\r\n\r\n    if (typeof localStorage === \"undefined\") {\r\n        return 0;\r\n    }\r\n\r\n    const cart = getUserCart();\r\n\r\n    let total = 0;\r\n\r\n    if (cart) {\r\n        cart.forEach(item => {\r\n            total += item.quantity\r\n        });\r\n    }\r\n    \r\n    return total;\r\n}\r\n\r\nconst getUser = () => {\r\n\r\n    let user = localStorage.getItem(\"user\");\r\n\r\n    if (!user) {\r\n        user = sessionStorage.getItem(\"user\");\r\n    }\r\n\r\n    if (!user) {\r\n        return undefined;\r\n    }\r\n\r\n    return JSON.parse(user);\r\n\r\n}\r\n\r\nexport {\r\n    setUser,\r\n    // getToken,\r\n    getUserEmail,\r\n    getUserWishList,\r\n    getUserCart,\r\n    getUser,\r\n    isSignedIn,\r\n    getNumberOfItemsInCart,\r\n    getUserEmailName,\r\n    updateWishList,\r\n    updateCart,\r\n    initUser\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAeiBA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AAhEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;A","sourceRoot":""}